import {MailTmClient} from "../../api/clients/mail/MailTmClient";

export class MailTmService {
    constructor(email = null, password = null) {
        this.email = email;
        this.password = password;
        this.token = null;
        this.client = new MailTmClient();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –µ—Å–ª–∏ email –Ω–µ –∑–∞–¥–∞–Ω ‚Äî –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π —è—â–∏–∫
     */
    async init() {
        if (!this.email || !this.password) {
            const { data: domainData } = await this.client.getDomains();
            const domain = domainData["hydra:member"][0].domain;

            this.email = this.email ?? `user_${Date.now()}@${domain}`;
            this.password = this.password ?? Math.random().toString(36).slice(-10) + "!1a";

            await this.client.createAccount(this.email, this.password);
        }

        // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        const { data } = await this.client.getToken(this.email,this.password);

        this.client.setBearerToken(data.token);

        console.log(`üìß Mailbox ready: ${this.email}`);
        return { email: this.email, password: this.password, token: this.token };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
     */
    async getMessages(limit = 5) {
        if (!this.client) throw new Error("Call init() first");
        const { data } = await this.client.getMessages();
        return data["hydra:member"].slice(0, limit);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–∏—Å—å–º–æ
     */
    async getLastMessage() {
        const messages = await this.getMessages(1);
        if (messages.length === 0) {
            console.log("üì≠ No messages yet");
            return null;
        }

        const msgId = messages[0].id;
        const { data } = await this.client.getMessage(msgId);
        console.log(`üì® Last message from ${data.from.address}: ${data.subject}`);
        return data;
    }

    /**
     * –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–∏—Å—å–º–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
     */
    async clearInbox() {
        const messages = await this.getMessages(50);
        for (const msg of messages) {
            await this.client.deleteMessage(msg.id);
        }
        console.log("üßπ Inbox cleared");
    }
}