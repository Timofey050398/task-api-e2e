// telegram/getTelegramCode.js
const { TelegramClient } = require('telegram');
const { StringSession } = require('telegram/sessions');
require('dotenv').config();

const apiId = Number(process.env.TG_API_ID);
const apiHash = process.env.TG_API_HASH;
const botName = process.env.TG_BOT_NAME || 'aifory_pro_bot';
const sessionString = process.env.TG_SESSION;

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram-–±–æ—Ç–∞
 * –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏–∑ –Ω–∏—Ö 2FA-–∫–æ–¥ (4‚Äì6 —Ü–∏—Ñ—Ä)
 */
async function getTelegram2FACode() {
    if (!sessionString) throw new Error('‚ùå TG_SESSION not found in .env');

    const session = new StringSession(sessionString);
    const client = new TelegramClient(session, apiId, apiHash, { connectionRetries: 5 });

    console.log('[Telegram] Connecting...');
    await client.connect();

    if (!await client.isUserAuthorized()) {
        throw new Error('üîë Session invalid or expired. Please regenerate TG_SESSION.');
    }

    console.log(`[Telegram] Authorized. Fetching messages from @${botName}...`);
    const messages = await client.getMessages(botName, { limit: 5 });

    const msgWithCode = messages.find(m => /\b\d{4,6}\b/.test(m.message));
    const twoFaCode = msgWithCode?.message.match(/\b\d{4,6}\b/)[0];

    if (twoFaCode) {
        console.log(`[Telegram] ‚úÖ 2FA code found: ${twoFaCode}`);
    } else {
        console.log('[Telegram] ‚ö†Ô∏è No 2FA code found in the last 5 messages.');
    }

    await client.disconnect();
    return twoFaCode;
}

// –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    getTelegram2FACode()
        .then(code => console.log('\nüì¶ Result 2FA code:', code))
        .catch(err => console.error('\n‚ùå Telegram error:', err.message));
}

module.exports = { getTelegram2FACode };
